/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caring_desktop;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import models_caring.Service_Model;
import models_caring.Service_Renderer;

/**
 *
 * @author Panwar
 */
public class Service_List extends javax.swing.JFrame {

    javax.swing.JList<Service_Model> countryList;
    Main_Panel ref;
     Set<Integer> setString;
     List<Service_Model> Aux = new ArrayList<Service_Model>();
     ArrayList<String> selections = new ArrayList<String>();
    /**
     * Creates new form Service_List
     */
    public Service_List(List<Service_Model> data, Main_Panel obj) 
    {
         initComponents();
         SetUp_ServeList(data);
         Aux =  data;
         ref = obj;
    }
    
    public void SetUp_ServeList(List<Service_Model> data)
    {
         DefaultListModel<Service_Model> listModel = new DefaultListModel<>();
         
         for(int i=0;i<data.size();i++)
         {
            listModel.addElement(data.get(i));
         }
         countryList = new JList<>(listModel);
         
        countryList.setCellRenderer(new Service_Renderer());
        countryList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        countryList.addListSelectionListener(new ListSelectionListener() {
             @Override
             public void valueChanged(ListSelectionEvent e) {
                // int i = countryList.getSelectedIndex();
                 

                 //setString.add(data.get(i).getSERVE_NAME());
                 //System.out.println("list "+setString);
                 
                 
                 if (!e.getValueIsAdjusting())
    {
         //countryList.setSelectedIndices(countryList.getSelectedIndices());
                 selections.add(""+countryList.getSelectedIndex());
                
                 System.out.println("inside list "+selections.toString());
                 
                 
      
    }
                 
                       
                 
        
               
             }
         });
        
        
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setTitle("Select Services");
        //this.setSize(200, 200);
        this.setLocationRelativeTo(null);   
         jScrollPane1.setViewportView(countryList);
        this.setVisible(true);
         }

    private Service_List() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirm_services = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        confirm_services.setText("Select Services");
        confirm_services.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirm_servicesActionPerformed(evt);
            }
        });

        jLabel1.setText("No service Selected");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirm_services))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(confirm_services)
                .addContainerGap(586, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirm_servicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirm_servicesActionPerformed
        // TODO add your handling code here:
        
        ArrayList<String> temp = new ArrayList<String>();
        System.out.print("array : "+countryList.getSelectedValuesList().size()+" size "+countryList.getSelectedIndices().length+" "+countryList.getSelectedValuesList());
        Set<String> unique = new HashSet<String>(selections);
        selections.clear();
        temp.addAll(unique);
        System.out.println("accepted "+unique.toString());
        Get_Selected_Beans(temp);
        
        
        
    }//GEN-LAST:event_confirm_servicesActionPerformed

    public void Get_Selected_Beans(ArrayList<String> index)
    {
        ArrayList<Service_Model> selected = new ArrayList<Service_Model>();
        for(int i=1;i<=index.size();i++)
        {
            selected.add(Aux.get(i));
            
        }
        System.out.print("inside Selected "+selected);
        
        ref.Set_Label_Service(selected);
        this.setVisible(Boolean.FALSE);
        
        
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Service_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Service_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Service_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Service_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Service_List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirm_services;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
